splice() +++++++++++++++++++++++FALTA COMPLETAR
======================-------------------------------==========================----------------------========================
slice() copia ou extrai um determinado número de elementos para um novo array, deixando o array em que o método é chamado inalterado. slice() recebe apenas 2 parâmetros 

Ex.:
function forecast(arr) {  
  const newArr = arr.slice(2, 4);
  return newArr;
}
console.log(forecast(['cold', 'rainy', 'warm', 'sunny', 'cool', 'thunderstorms']));
======================-------------------------------==========================----------------------========================
O novo operador spread do ES6 nos permite facilmente copiar todos os elementos de um array, em ordem.
Ex.:
function copyMachine(arr, num) {
  let newArr = [];
  while (num >= 1) {
    let a = [...arr];
    newArr.push(a);  
    num--;
  }
  return newArr;
}
console.log(copyMachine([true, false, true], 2));
======================-------------------------------==========================----------------------========================
indexOf() recebe um elemento como parâmetro, e quando chamado, retorna a posição, ou índice, daquele elemento, ou -1 se o elemento não existe no array.
Ex.:
function quickCheck(arr, elem) {
  if(arr.indexOf(elem) === -1){
    return false;
  }else{
    return true;
  }
}
console.log(quickCheck(['squash', 'onions', 'shallots'], 'mushrooms'));
======================-------------------------------==========================----------------------========================
Percorrendo todo array com laço FOR + .indexOf().
Ex.:
function filteredArray(arr, elem) {
  let newArr = [];
  for(let i = 0; i < arr.length; i++){
    if(arr[i].indexOf(elem) === -1){
      newArr.push(arr[i]);
    };   
  };
  return newArr;
};
/*Está iterando por todo array passado e excluíndo aqueles arrays aninhados que contiverem o elemento passado
como parâmetro, retornando apenas os arrays sem o elemento.
*/
console.log(filteredArray([["amy", "beth", "sam"], ["dave","sean", "peter"]], "peter"));//[["amy", "beth", "sam"]]
======================-------------------------------==========================----------------------========================

